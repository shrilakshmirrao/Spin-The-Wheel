{
  "version": 3,
  "sources": [
    "images/spinWheel.mp3",
    "Option.tsx",
    "Settings.tsx",
    "Winner.ts",
    "App.tsx",
    "reportWebVitals.ts",
    "index.tsx"
  ],
  "names": [
    "Option",
    "val",
    "index",
    "color",
    "Container",
    "Wrap",
    "styled",
    "div",
    "props",
    "Settings",
    "volume",
    "setVolume",
    "spin",
    "openMenu",
    "Span",
    "Stack",
    "spacing",
    "direction",
    "sx",
    "mb",
    "alignItems",
    "Slider",
    "value",
    "onChange",
    "event",
    "newValue",
    "localStorage",
    "setItem",
    "JSON",
    "stringify",
    "disabled",
    "min",
    "max",
    "step",
    "getAriaValueText",
    "span",
    "winner",
    "App",
    "useState",
    "random",
    "setRandom",
    "degrees",
    "setDegrees",
    "setSpin",
    "active",
    "setActive",
    "setOpenMenu",
    "result",
    "setResult",
    "spinSound",
    "Audio",
    "require",
    "default",
    "vol",
    "getItem",
    "Number",
    "options",
    "parse",
    "val1",
    "val2",
    "val3",
    "val4",
    "val5",
    "setVal",
    "arr",
    "Array",
    "fill",
    "handleChange",
    "e",
    "target",
    "name",
    "handlePull",
    "Math",
    "floor",
    "WheelContainer",
    "Arrow",
    "Wheel",
    "className",
    "map",
    "a",
    "i",
    "LeverContainer",
    "onMouseDown",
    "onMouseUp",
    "play",
    "setTimeout",
    "num",
    "length",
    "j",
    "checkWinner",
    "Lever",
    "Handle",
    "Tube",
    "Wrapper",
    "Input",
    "type",
    "maxLength",
    "spellCheck",
    "onClick",
    "Board",
    "Link",
    "href",
    "input",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.1c3e9a85.chunk.js",
  "sourcesContent": [
    "export default __webpack_public_path__ + \"static/media/spinWheel.e5bae901.mp3\";",
    "import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\ntype Props = {\r\n    index: number\r\n    color: string\r\n    val: string\r\n  };\r\n\r\n\r\nexport const Option: FC<Props> = ({val, index, color}) => {\r\n    return (\r\n        <Container index={index} color={color} val={val}>\r\n            <Wrap>\r\n                {val}\r\n            </Wrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div<Props>`\r\n    position: absolute;\r\n    top: 43.8%;\r\n    left: 0.2%;\r\n    /* width: 30vh;\r\n    height: 5vh; */\r\n    transform-origin: center right;\r\n    border-left: 30vh solid ${props => props.color};\r\n    border-top: 4vh solid transparent;\r\n    border-bottom: 4vh solid transparent;\r\n    border-right: none;\r\n    box-sizing: border-box;\r\n    transform: rotate(${props => props.index * 15}deg);\r\n    padding-left: 3%;\r\n    font-size: 2vh;\r\n    line-height: 0;\r\n`\r\nconst Wrap = styled.div`\r\n    position: absolute;\r\n    right: 10vh;\r\n    text-align: left;\r\n    width: 20vh;\r\n    user-select: none;\r\n    font-weight: 700;\r\n`",
    "import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeDown from '@mui/icons-material/VolumeDown';\r\nimport VolumeUp from '@mui/icons-material/VolumeUp';\r\n\r\ninterface Props2 {\r\n    openMenu: boolean\r\n}\r\ninterface Props{\r\n    volume: number\r\n    setVolume: React.Dispatch<React.SetStateAction<number>>\r\n    spin: boolean\r\n}\r\ntype MultiProps = Props & Props2\r\n\r\nexport const Settings: FC<MultiProps> = ({volume, setVolume, spin, openMenu}) => {\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setVolume(newValue as number);\r\n        localStorage.setItem(\"volume\", JSON.stringify(volume))\r\n      };\r\n      function valuetext(value: number) {\r\n        return `${value}`;\r\n      }\r\n    \r\n    return (\r\n        <Container openMenu={openMenu}>\r\n            <Span>Volume</Span>\r\n            <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n                <VolumeDown />\r\n                <Slider aria-label=\"Volume\" \r\n                    value={volume} \r\n                    onChange={handleChange} \r\n                    disabled={spin}\r\n                    min={0}    \r\n                    max={1}\r\n                    step={0.05}\r\n                    getAriaValueText={valuetext}\r\n                />\r\n                <VolumeUp />\r\n            </Stack>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div<Props2>`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: #ffffffc8;\r\n    width: 200px;\r\n    max-width: 50vw;\r\n    padding: 0.3rem 1rem;\r\n    z-index: 3;\r\n    transition: transform .2s linear;\r\n    transform: translateX(${({openMenu}) => (openMenu ? 0 : 200)}px);\r\n`\r\nconst Span = styled.span`\r\n    font-size: 0.8rem;\r\n    margin-left: 1rem;\r\n`",
    "export const winner = [[[7.5, 22.5], [37.5, 52.5], [67.5, 82.5], [97.5, 112.5], [127.5, 142.5], [157.5, 172.5], [187.5, 202.5], [217.5, 232.5], [247.5, 262.5], [277.5, 292.5], [307.5, 322.5], [337.5, 352.5]],[[0, 7.5], [52.5, 67.5], [112.5, 127.5], [172.5, 187.5], [232.5, 247.5], [292.5, 307.5], [352.5, 360]],[[22.5, 37.5], [142.5, 157.5], [262.5, 277.5]],[[202.5, 217.5], [322.5, 337.5]],[[82.5, 97.5]]]\r\n",
    "import React, { FC, useState } from 'react';\r\nimport './App.css';\r\nimport { Option } from './Option';\r\nimport styled from 'styled-components';\r\nimport { Settings } from './Settings';\r\nimport {winner} from './Winner'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\n\r\ninterface Props {\r\n  spin?: boolean,\r\n  active?: boolean,\r\n  openMenu?: boolean\r\n}\r\ninterface Prop2 {\r\n  degrees: number,\r\n  random: number\r\n}\r\n\r\nconst App: FC = () => {\r\n  const [random, setRandom] = useState<number>(0)\r\n  const [degrees, setDegrees] = useState<number>(0)\r\n  const [spin, setSpin] = useState<boolean>(false)\r\n  const [active, setActive] = useState<boolean>(false)\r\n  const [openMenu, setOpenMenu] = useState<boolean>(false)\r\n  const [result, setResult] = useState<string>(\"\")\r\n  const spinSound = new Audio(require('./images/spinWheel.mp3').default)\r\n  const vol = localStorage.getItem(\"volume\")\r\n  const [volume, setVolume] = useState<number>(Number(vol) || 0.5)\r\n  const options = JSON.parse(localStorage.getItem(\"options\") || '{}')\r\n  const [val, setVal] = useState({\r\n    val1: options.val1 || \"Pop it\",\r\n    val2: options.val2 || \"Scoop it up\",\r\n    val3: options.val3 || \"Biscuit Dash\",\r\n    val4: options.val4 || \"Bubble Hop\",\r\n    val5: options.val5 || \"Blown Away\",\r\n  })\r\n  const arr = new Array(24).fill(\"\")\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setVal({\r\n      ...val,\r\n      [e.target.name]: e.target.value\r\n    })\r\n    localStorage.setItem(\"options\", JSON.stringify(val))\r\n  }\r\n  const handlePull = () => {\r\n    setRandom(getRandom(2160, 2520))\r\n  }\r\n\r\n  const handleRelease = () => {\r\n    setSpin(true)\r\n    setActive(false)\r\n    spinSound.play()\r\n    spinSound.volume = volume\r\n    setTimeout(() => {\r\n      setSpin(false)\r\n      setDegrees(degrees + random)\r\n      setResult(checkWinner((degrees + random) % 360))\r\n      setRandom(0)\r\n    }, 16000);\r\n  \r\n  }\r\n  \r\n  function getRandom(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  function checkWinner(num: number) {\r\n    for (let i = 0; i < winner.length; i++) {\r\n      for (let j = 0; j < winner[i].length; j++) {\r\n        if (num > winner[i][j][0] && num < winner[i][j][1]) {\r\n          return i === 0 ? val.val1 :\r\n                i === 1 ? val.val2 :\r\n                i === 2 ? val.val3 :\r\n                i === 3 ? val.val4 :\r\n                val.val5\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <WheelContainer>\r\n        <Arrow></Arrow>\r\n        <Wheel degrees={degrees} random={random} className={spin ? \"spin\" : \"\"}>\r\n          {arr.map((a, i) => (\r\n            <Option key={i} index={i} \r\n              val={i % 2 ? val.val1 : \r\n                i % 4 ? val.val2 : \r\n                (i % 4 === 0 && i % 8 !== 0) ? val.val3 : \r\n                (i % 8 === 0 && i !== 0 && i % 24 !== 0) ? val.val4 : \r\n                i === 0 ? val.val5 : \r\n                \"\"}\r\n              color={i % 2 ? \"khaki\" : \r\n                i % 4 ? \"mediumseagreen\" : \r\n                (i % 4 === 0 && i % 8 !== 0) ? \"cornflowerblue\" : \r\n                (i % 8 === 0 && i !== 0 && i % 24 !== 0) ? \"mediumorchid\" : \r\n                i === 0 ? \"coral\" : \r\n                \"\"}\r\n            />\r\n          ))}\r\n        </Wheel>\r\n        <LeverContainer spin={spin} onMouseDown={() => {setActive(true);handlePull()}} onMouseUp={handleRelease}>\r\n          <Lever active={active}>\r\n            <Handle spin={spin}></Handle>\r\n            <Tube spin={spin}></Tube>\r\n          </Lever>\r\n        </LeverContainer>\r\n      </WheelContainer>\r\n\r\n      <Wrapper openMenu={openMenu}>\r\n        <span>Common</span>\r\n        <Input type=\"text\" disabled={spin} maxLength={13} value={val.val1} spellCheck={false} onChange={handleChange} name=\"val1\"/>\r\n        <span>Uncommon</span>\r\n        <Input type=\"text\" disabled={spin} maxLength={13} value={val.val2} spellCheck={false} onChange={handleChange} name=\"val2\"/>\r\n        <span>Rare</span>\r\n        <Input type=\"text\" disabled={spin} maxLength={13} value={val.val3} spellCheck={false} onChange={handleChange} name=\"val3\"/>\r\n        <span>Epic</span>\r\n        <Input type=\"text\" disabled={spin} maxLength={13} value={val.val4} spellCheck={false} onChange={handleChange} name=\"val4\"/>\r\n        <span>Legendary</span>\r\n        <Input type=\"text\" disabled={spin} maxLength={13} value={val.val5} spellCheck={false} onChange={handleChange} name=\"val5\"/>\r\n        <KeyboardArrowDownIcon onClick={() => setOpenMenu(!openMenu)}/>\r\n      </Wrapper>\r\n      <Settings volume={volume} setVolume={setVolume} spin={spin} openMenu={openMenu}/>\r\n\r\n      <Board><p className={!spin ? \"textAnim\" : \"\"}>{result}</p></Board>\r\n      <Link href=\"https://twitter.com/codmitu\" target=\"_blank\">\r\n        <TwitterIcon/> @codmitu\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  place-content: center;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n`\r\nconst WheelContainer = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 66vh;\r\n  height: 66vh;\r\n  @media screen and (max-width: 800px) {\r\n    transform: scale(0.8);\r\n  }\r\n  @media screen and (max-width: 617px) {\r\n    transform: scale(0.6);\r\n  }\r\n`\r\nconst Arrow = styled.div`\r\n  position: absolute;\r\n  z-index: 12;\r\n  width: 7%;\r\n  height: 7%;\r\n  top: -1vh;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  clip-path: polygon(0% 0%, 100% 0, 100% 50%, 50% 100%, 0 50%);\r\n  background-image: linear-gradient(to bottom,  cyan, blue);\r\n`\r\nconst Wheel = styled.div<Prop2>`\r\n  transform:  rotate(${props => props.degrees}deg);\r\n  background-image: radial-gradient(darkgray 0.5vh, cyan 1vh, green 2vh, darkgray 2vh);\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  border: 1vh solid darkgray;\r\n  outline-offset: -1vh;\r\n  outline: 1.2vh dotted red;\r\n  &.spin {\r\n    animation: spinning 15.5s forwards ease;\r\n    @keyframes spinning {\r\n      7% {\r\n        transform: rotate(${props => props.degrees - 15}deg);\r\n      }\r\n      100% {\r\n        transform: rotate(${props => props.degrees + props.random}deg);\r\n      }\r\n    }\r\n  }\r\n  @keyframes bording {\r\n    0% {\r\n      outline: 1.2vh dotted red;\r\n    }\r\n    20% {\r\n      outline: 1.2vh dotted blue;\r\n    }\r\n    40% {\r\n      outline: 1.2vh dotted green;\r\n    }\r\n    60% {\r\n      outline: 1.2vh dotted purple;\r\n    }\r\n    80% {\r\n      outline: 1.2vh dotted orange;\r\n    }\r\n    100% {\r\n      outline: 1.2vh dotted yellow;\r\n    }\r\n  }\r\n`\r\nconst LeverContainer = styled.div<Props>`\r\n  position: absolute;\r\n  width: 10vh;\r\n  height: 10vh;\r\n  z-index: -1;\r\n  top: 50%;\r\n  right: -20%;\r\n  transform: translate(-50%, -50%);\r\n  pointer-events: ${props => props.spin ? \"none\" : \"all\"};\r\n`\r\nconst Lever = styled.div<Props>`\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all ${props => props.active ? 0.2 : 0.5}s linear;\r\n  transform: rotate(${props => props.active ? 20 : 0}deg) translateY(${props => props.active ? 7 : 0}vh);\r\n`\r\nconst Handle = styled.div<Props>`\r\n  width: 30%;\r\n  height: 30%;\r\n  cursor: ${props => props.spin ? \"not-allowed\" : \"pointer\"};\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  background-image: ${props => props.spin ? \r\n                \"radial-gradient(farthest-corner at 10px 10px, white, black)\" : \r\n                \"radial-gradient(farthest-corner at 10px 10px, #01da01, black)\"};\r\n  `\r\nconst Tube = styled.div<Props>`\r\n  cursor: ${props => props.spin ? \"not-allowed\" : \"pointer\"};\r\n  width: 5%;\r\n  transform: rotate(45deg);\r\n  transform-origin: bottom center;\r\n  height: 110%;\r\n  position: absolute;\r\n  z-index: -1;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-image: linear-gradient(to right, white, #310000);\r\n`\r\nconst Wrapper = styled.div<Props>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 200px;\r\n  max-width: 50vw;\r\n  position: absolute;\r\n  background-color: #ffffffc8;\r\n  padding: 20px 0;\r\n  z-index: 2;\r\n  transition: transform .2s linear;\r\n  transform: translateY(${props => props.openMenu ? 0 : -93}%);\r\n  >span {\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n  }\r\n  >svg {\r\n    margin: 0 auto -20px;\r\n    cursor: pointer;\r\n    font-size: 2rem;\r\n    transform: rotate(${props => props.openMenu ? 180 : 0}deg);\r\n    &:hover {\r\n      color: #3b3b3b;\r\n    }\r\n  }\r\n`\r\nconst Input = styled.input`\r\n  margin: 10px 20px;\r\n  padding: 5px 10px;\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  &:nth-child(2) {\r\n    background-color: #d3c96bc7;\r\n    outline: none;\r\n    border: 3px solid khaki;\r\n    border-radius: 10px;\r\n  }\r\n  &:nth-child(4) {\r\n    background-color: #3cb372b9;\r\n    outline: none;\r\n    border: 3px solid mediumseagreen;\r\n    border-radius: 10px;\r\n  }\r\n  &:nth-child(6) {\r\n    background-color: #6494edba;\r\n    outline: none;\r\n    border: 3px solid cornflowerblue;\r\n    border-radius: 10px;\r\n  }\r\n  &:nth-child(8) {\r\n    background-color: #ba55d3cf;\r\n    outline: none;\r\n    border: 3px solid mediumorchid;\r\n    border-radius: 10px;\r\n  }\r\n  &:nth-child(10) {\r\n    background-color: #ff7f50be;\r\n    outline: none;\r\n    border: 3px solid coral;\r\n    border-radius: 10px;\r\n  }\r\n`\r\nconst Board = styled.div`\r\n  height: 10vh;\r\n  width: 30vh;\r\n  position: absolute;\r\n  background-color: #ffffff;\r\n  border-radius: 0% 20px;\r\n  bottom: 0;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  place-content: center;\r\n  font-family: Georgia, 'Times New Roman', Times, serif;\r\n  font-size: 3vh;\r\n  box-shadow: inset 0 0 10px 0px black;\r\n  border: 5px solid #303030;\r\n  >p {\r\n    &.textAnim {\r\n      animation: texting 0.5s ease-in;\r\n      @keyframes texting {\r\n        50% {\r\n          font-size: 5vh;\r\n          color: cyan;\r\n        }\r\n        100% {\r\n          font-size: 3vh;\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Link = styled.a`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  /* color: lightgray; */\r\n  text-decoration: none;\r\n  color: #1d9bf0;\r\n  font-size: 0.7rem;\r\n  margin: 5px;\r\n  >svg {\r\n    font-size: 0.9rem;\r\n    margin-bottom: -3px;\r\n  }\r\n`",
    "import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}
